@use 'sass:math';
@import 'normalize.css';

:root {
    --primary: #97a97c;
    --black: #000;
    --white: #fff;
    --text-color: #161823;

    --font-family: 'ProximaNova', sans-serif;

    // Default layout
    --default-layout-header-height: 60px;
    --default-layout-width: 1150px;
    --default-layout-horizontal-spacer: 24px;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    font-size: 62.5%;
}

body {
    font-family: var(--font-family);
    font-size: 1.6rem;
    line-height: 1.5;
    text-rendering: optimizespeed;
    color: var(--text-color);
    overflow-y: overlay;
}

// Scrollbar CSS
html *::-webkit-scrollbar {
    border-radius: 0;
    width: 8px;
}

html *::-webkit-scrollbar-thumb {
    border-radius: 4px;
    background-color: rgba(0, 0, 0, 0.15);
}

html *::-webkit-scrollbar-track {
    border-radius: 0;
    background-color: rgba(0, 0, 0, 0);
}

button,
input,
[tabindex] {
    outline: none;
    border: none;
}

a {
    color: var(--text-color);
    text-decoration: none;
}

// Fonts emmbeded
@font-face {
    font-family: ProximaNova;
    src: url('/assets/fonts/Proxima-Nova-Regular.woff2');
    font-weight: 400;
}

@font-face {
    font-family: ProximaNova;
    src: url('/assets/fonts/ProximaNova-Semibold.woff2');
    font-weight: 600;
}

@font-face {
    font-family: ProximaNova;
    src: url('/assets/fonts/Proxima-Nova-Bold.woff');
    font-weight: 700;
}

@font-face {
    font-family: SofiaPro;
    src: url('/assets/fonts/sofiapro-bold.woff');
    font-weight: 700;
}

// Custom tippy tooltip
body {
    .tippy-box {
        border-radius: 8px;
        font-weight: 600;
        font-size: 1.6rem;
        line-height: 2.2rem;
        background-color: rgba(84, 84, 84, 0.92);
    }

    .tippy-arrow {
        color: rgba(84, 84, 84, 0.92);
    }

    .tippy-content {
        padding: 8px 9px;
    }

    .tippy-box[data-placement^='bottom'] > .tippy-arrow:before {
        top: -8px;
    }
}

// Abstract
$grid-breakpoints: (
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    xxl: 1400px,
);

@mixin screen($key) {
    $breakpoint: map-get($grid-breakpoints, $key);
    @if ($breakpoint) {
        @media (max-width: ($breakpoint - 0.02)) {
            @content;
        }
    } @else {
        @error 'The value "#{$key}" is not in breakpoints list.';
    }
}

// Base
*,
::before,
::after {
    box-sizing: border-box;
}

* {
    -webkit-tap-highlight-color: transparent;
}

html {
    font-size: 62.5%;
}

body {
    font-size: 1.6rem;
    font-family: Lato, sans-serif;
    color: var(--text-color);
    background: var(--body-bg);
}

a {
    color: inherit;
    text-decoration: none;
}

button {
    border: none;
    outline: none;
    background: transparent;
    padding: 0;
    cursor: pointer;
}

a,
img,
button,
input,
label,
textarea,
select {
    padding: 0;
    font-family: inherit;
    color: inherit;
    outline: none;
    border: none;
}

input,
textarea {
    background: transparent;
}

input:-webkit-autofill,
input:-webkit-autofill:focus,
input:-webkit-autofill:active,
input:-webkit-autofill:hover {
    transition: background-color 1s 9999s;
    -webkit-text-fill-color: var(--text-color);
    caret-color: var(--text-color);
}

.icon {
    filter: var(--icon-color);
}

.container {
    @include screen(sm) {
        padding-left: 20px !important;
        padding-right: 20px !important;
    }
}

i,
em {
    font-style: italic;
}

b,
strong {
    font-weight: 600;
}

.separate {
    margin: var(--margin) 0;
    height: 1px;
    background: var(--separate-color);
}

ol,
ul {
    list-style: none;
}

// Grid

$grid-breakpoints: (
    xxl: 1400px,
    xl: 1200px,
    lg: 992px,
    md: 768px,
    sm: 576px,
);
$container-max-widths: (
    sm: 100%,
    md: 540px,
    lg: 720px,
    xl: 960px,
    xxl: 1140px,
);
$grid-columns: 12 !default;
$grid-gutter-width: 30px !default;
$gutters: (
    0: 0,
    1: 0.25,
    2: 0.5,
    3: 1,
    4: 1.5,
    5: 3,
);

%gutter-padding {
    padding-left: calc(var(--grid-gutter-x) * 0.5);
    padding-right: calc(var(--grid-gutter-x) * 0.5);
}

.container-fluid {
    --grid-gutter-x: #{$grid-gutter-width};
    --grid-gutter-y: 0;

    width: 1370px;
    margin-left: auto;
    margin-right: auto;
    @extend %gutter-padding;
}

.container {
    @extend .container-fluid;
    width: 1370px;
}

.row {
    display: flex;
    flex-wrap: wrap;
    margin-top: calc(var(--grid-gutter-y) * -1);
    margin-left: calc(var(--grid-gutter-x) * 0.5 * -1);
    margin-right: calc(var(--grid-gutter-x) * 0.5 * -1);

    > * {
        margin-top: var(--grid-gutter-y);
        @extend %gutter-padding;
    }
}

.col {
    flex: 1 0;
}

@mixin make-media-query($dimension) {
    @media (max-width: ($dimension - 0.02)) {
        @content;
    }
}

@mixin make-row-columns($infix: null) {
    @for $i from 1 through $grid-columns * 0.5 {
        .row-cols#{$infix}-#{$i} > * {
            flex: 0 0 auto;
            width: math.div(100%, $i);
        }
    }
}

@mixin make-columns($infix: null) {
    @for $i from 1 through $grid-columns {
        .col#{$infix}-#{$i} {
            flex: 0 0 auto;
            width: math.div(100%, $grid-columns) * $i;
        }
    }
}

@mixin make-offsets($infix: null) {
    @for $i from 0 to $grid-columns {
        .offset#{$infix}-#{$i} {
            margin-left: if($i > 0, math.div(100%, $grid-columns) * $i, 0);
        }
    }
}

@mixin make-gutters($infix: null) {
    @each $i, $ratio in $gutters {
        .g#{$infix}-#{$i},
        .gx#{$infix}-#{$i} {
            --grid-gutter-x: #{$grid-gutter-width * $ratio};
        }

        .g#{$infix}-#{$i},
        .gy#{$infix}-#{$i} {
            --grid-gutter-y: #{$grid-gutter-width * $ratio};
        }
    }
}

@include make-row-columns();

@include make-columns();

@include make-offsets();

@include make-gutters();

@each $breakpoint, $dimension in $grid-breakpoints {
    $max-width: map-get($container-max-widths, $breakpoint);
    $infix: '-#{$breakpoint}';

    @include make-media-query($dimension) {
        .container {
            max-width: $max-width;
        }

        @include make-row-columns($infix);

        @include make-columns($infix);

        @include make-offsets($infix);

        @include make-gutters($infix);
    }
}

// Utils
$breakpoints: (
    xxl: 1400px,
    xl: 1200px,
    lg: 992px,
    md: 768px,
    sm: 576px,
);
$display-values: block, flex, grid, none;

@mixin make-display($breakpoint: null) {
    $infix: if($breakpoint, '-#{$breakpoint}', '');

    @each $display in $display-values {
        .d#{$infix}-#{$display} {
            display: $display !important;
        }
    }
}

@include make-display();

@each $breakpoint, $dimension in $breakpoints {
    @media (max-width: ($dimension - 0.02)) {
        @include make-display($breakpoint);
    }
}

// Theme
html {
    --text-color: #1a162e;
    --icon-color: brightness(0) saturate(100%) invert(8%) sepia(10%) saturate(4042%) hue-rotate(212deg) brightness(90%)
        contrast(95%);

    --body-bg: #f6f6f6;
    --header-bg-color: #eee;
    --footer-bg-color: var(--header-bg-color);

    --top-act-group-bg-color: #fff;
    --top-act-group-shadow: rgba(237, 237, 246, 0.2);
    --top-act-group-separate: #ededf6;

    @include screen(lg) {
        --header-bg-color: #fff;
        --header-shadow-color: rgba(237, 237, 246, 0.2);
    }

    // Header
    --header-act-dropdown-bg: #fff;
    --header-act-dropdown-shadow: rgba(200, 200, 200, 0.4);
    --header-act-dropdown-border-color: #d2d1d6;

    // Dropdown
    --dropdown-bg-color: #fff;
    --dropdown-shadow-color: rgba(200, 200, 200, 0.4);
    --top-menu-border-color: #d2d1d6;

    // Sidebar
    --sidebar-bg: #fff;
    --sidebar-shadow: rgba(200, 200, 200, 0.4);

    // Category item
    --cate-item-bg: #eee;
    --cate-item-thumb-bg: #fff;
    --cate-item-title-color: #000;

    @include screen(md) {
        --cate-item-bg: #fff;
    }

    // Buttons
    --filter-btn-color: #6c6c72;
    --filter-btn-bg: #fff;

    // Product card
    --product-card-bg: #fff;
    --product-card-shadow: rgba(237, 237, 246, 0.2);

    // Filter form
    --filter-form-bg: #fff;
    --filter-form-shadow: rgba(200, 200, 200, 0.4);
    --form-tag-bg: #f8f8fb;

    // Auth
    --auth-content-bg: #fff;

    @include screen(md) {
        --auth-intro-bg: #fff;
    }

    // Forms
    --form-placeholder-color: #d2d1d6;
    --form-select-dialog-shadow: rgba($color: #000000, $alpha: 0.15);
    --form-select-dialog-bg: #fff;
    --form-option-hover-bg: #ebebeb;

    // Product detail
    --product-detail-bg: #fff;
    --product-detail-info-bg: #f6f6f6;
    --product-detail-info-content-bg: #fff;
    --product-detail-tag-bg: #ededf6;

    @include screen(md) {
        --product-detail-bg: #fafafd;
        --product-detail-info-bg: #fff;
    }

    // Breadcrumbs
    --breadcrumbs-bg: #f6f6f6;
    --breadcrumbs-shadow: rgba(237, 237, 246, 0.2);

    @include screen(md) {
        --breadcrumbs-bg: #fff;
    }

    // Search bar
    --search-bar-bg: #fff;

    // Review card
    --review-card-bg: #fafafd;

    @include screen(md) {
        --review-card-bg: #fff;
    }

    // Text content
    --text-content-hr-bg: #ebebeb;

    // Checkout
    --checkout-breadcrumbs-bg: #fff;
    --checkout-cart-info-bg: #fff;
    --checkout-cart-info-shadow: rgba(237, 237, 246, 0.2);
    --checkout-border-color: #d2d1d6;
    --checkout-gift-shadow: rgba(237, 237, 246, 0.2);
    --checkout-payment-item-bg: #f6f6f6;

    // Dialog
    --dialog-bg: #fff;
    --dialog-shadow: rgba(237, 237, 246, 0.2);

    // Profile
    --profile-sidebar-bg: #fff;
    --profile-sidebar-shadow: rgba(237, 237, 246, 0.2);
    --profile-sidebar-link-hover: #ebebeb;

    // Account info
    --account-info-bg: #f6f6f6;
    --account-info-icon-bg: #fff;

    // Separate
    --separate-color: #d2d1d6;
}
